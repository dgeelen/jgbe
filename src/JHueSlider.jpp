#ifndef USE_JAVA_MOBILE
import java.awt.*;
import javax.swing.*;
import javax.swing.plaf.basic.*;

public class JHueSlider extends JColoredSlider
{
  protected float saturation = 0f;
  protected float value = 100f;

  private static final long serialVersionUID = 1L; // prevent warning

  public JHueSlider()
  {
    super();
  }

  public JHueSlider(BoundedRangeModel brm)
  {
    super(brm);
  }

  public JHueSlider(int orientation)
  {
    super(orientation);
  }

  public JHueSlider(int min, int max)
  {
    super(min, max);
  }

  public JHueSlider(int min, int max, int value)
  {
    super(min, max, value);
  }

  public JHueSlider(int orientation, int min, int max, int value)
  {
    super(orientation, min, max, value);
  }

  public void setSaturationAndValue(float saturation, float value)
  {
    this.saturation = saturation;
    this.value = value;
  }

  public void paintComponent(Graphics gr)
  {
    float width = getWidth();
    float height = getHeight();

    Graphics2D g = (Graphics2D)gr;
    g.setColor(getBackground());
    g.fillRect(0,0,(int)width,(int)height);
    int precision = (int)width;

    for(int i = 0; i < precision; ++i)
    {
      float hue = i * ((float)ColorConverter.MAX_HUE /(float)precision);
      g.setColor(ColorConverter.hsvToColor(hue, saturation, value));
      g.fillRect(getX() + (int)((width  / precision) * i),
                 (int)height / 2,
                 (int)((width / precision) * (i + 1)),
                 (int)height);
    }

    ((BasicSliderUI)getUI()).paintLabels(g);
    ((BasicSliderUI)getUI()).paintThumb(g);
  }
}
#endif
