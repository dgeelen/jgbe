#include "Global.inc"
#ifndef USE_JAVA_MOBILE
import java.io.*;
public class romtester {
	public static void main( String[] args ) {
		Cartridge cartridge;
		String romfile="", logfile="";
		for (int i = 0; i < args.length; ++i) {
			if (args[i].charAt(0)!='-')
				romfile = args[i];
			if (args[i].equals("-log"))
				logfile = args[++i];
		}
		if (romfile.equals("")) {
			PRINTLN();
			PRINTLN("ERROR: missing argument");
			PRINTLN();
			PRINTLN("USAGE: java swinggui ROMFILE [-log LOGFILE]");
			PRINTLN();
			return;
		}
		Writer logwriter = null;
		try {
			if (!logfile.equals(""))
				logwriter = new BufferedWriter( new FileWriter(logfile) );
		}
		catch (java.io.IOException e) {
			PRINTLN("Error opening logfile:" + e.getMessage());
			logwriter = null;
		}

		cartridge = new Cartridge(romfile);
		String[] messages = { "[empty]" };
		if(cartridge.getStatus(messages)==Cartridge.STATUS_FATAL_ERROR) {
			PRINTLN("ERROR: "+messages[0]);
			return;
		}

		PRINTLN("Succesfully loaded ROM :)");
		CPU.loadCartridge(cartridge);

		CPU.reset();
		AudioController.isMuted = true;

		int instrlimit=100;

		while (true) {
			if (logwriter != null) {
				String out = STRFORMAT("PC=$%04x AF=$%02x%02x BC=$%02x%02x DE=$%02x%02x HL=$%02x%02x SP=$%04x\n",
					CPU.getPC(),
					CPU.A,
					CPU.F,
					CPU.B,
					CPU.C,
					CPU.D,
					CPU.E,
					CPU.H,
					CPU.L,
					CPU.SP);
				try {
					logwriter.write(out);
				}
				catch (java.io.IOException e) {
					PRINTLN("Error writing logfile:" + e.getMessage());
					logwriter = null;
				}
			}

			boolean failed = false;
			try {
				CPU.runlooponce();
			} catch (Throwable e) {
				failed = true;
			}

			if ((--instrlimit==0) || failed) {
				String s= STRFORMAT("%02x",CPU.read(CPU.getPC()));
				String ss= STRFORMAT("%04x",CPU.getPC());
				s=s.toUpperCase();
				ss=ss.toUpperCase();
				if (logwriter != null) {
					String out = STRFORMAT("invalid opcode 0x"+s+" at address 0x"+ss+", rombank = "+cartridge.CurrentROMBank+"\n");
					try {
						logwriter.write(out);
					}
					catch (java.io.IOException e) {
						PRINTLN("Error writing logfile:" + e.getMessage());
						logwriter = null;
					}
				}
				try {
					logwriter.flush();
				}
				catch (java.io.IOException e2) {
					PRINTLN("Error flushing logfile:" + e2.getMessage());
					logwriter = null;
				}
				return;
			}
		}
	}
}
#endif
