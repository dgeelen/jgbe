#include "Global.inc"

import java.io.InputStream;
import java.io.OutputStream;
import java.util.Enumeration;
import java.util.Vector;

public class VFSRoot implements IVFSNode {
	private String name;
	private Vector<IVFSNode> children;

	public VFSRoot(String name)
	{
		this.children = new Vector<IVFSNode>();
		this.name = name;
	}

	public boolean exists()
	{
		return true;
	};

	public boolean isFile()
	{
		return false;
	}

	public boolean isDir()
	{
		return true;
	}

	public String getURL()
	{
		return "vfsroot://";
	}

	public String getName()
	{
		return name;
	}

	/* for files */
	public InputStream getInputStream()
	{
		return null;
	}

	public OutputStream getOutputStream()
	{
		return null;
	}

	/* for dirs */
	public Enumeration<IVFSNode> getChildren()
	{
		return children.elements();
	}

	public IVFSNode createFile(String name)
	{
		return null;
	}

	public IVFSNode createDir(String name)
	{
		return null;
	}

	public void delete(String name)
	{
	}

	public void addNode(IVFSNode newnode)
	{
		if (newnode == null)
			return;
		//if (newnode.isDir() && !newnode.getChildren().hasMoreElements())
		//	return;
		children.addElement(newnode);
	}

	static IVFSNode getRoot()
	{
		VFSRoot root = new VFSRoot("root/");
		root.addNode(new VFSJar("jar/", "/"));
#ifdef USE_JAVA_MOBILE
		if (System.getProperty("microedition.io.file.FileConnection.version") != null) try {
			root.addNode(new VFS_JSR75("filesystem/", "/"));
		} catch (Throwable e) { PRINTLN(e.getMessage()); }
		try {
			root.addNode(new VFSRecStore("Record-JMGBE-Local", "jmgbe-store"));
		} catch (Throwable e) { PRINTLN(e.getMessage()); }
		try {
			root.addNode(new VFSRecStore("Record-JMGBE", "jmgbe-store", "Vendor", "JMGBE"));
		} catch (Throwable e) { PRINTLN(e.getMessage()); }
		try {
			root.addNode(new VFSRecStore("Record-JMGBE-Store", "jmgbe-store", "Vendor", "JMGBE-Store"));
		} catch (Throwable e) { PRINTLN(e.getMessage()); }
#endif
		return root;
	}
};
